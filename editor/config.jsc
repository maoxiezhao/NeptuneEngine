import "../tools/neptuneBuild/config_base.jsc"
{
    ///////////////////////////////////////////////////////////////////
    // common definitions
    jcs_def :
    {
        sln_name : "VulkanTest",
        build_tools_dir : "../tools/neptuneBuild",
        assets_dir : "../assets",
        assets_export_dir : ".export",
        project_dir : "../workspace",
        header_tools_dir : "../tools/headerTools",
    },

    ///////////////////////////////////////////////////////////////////
    // platform:win32
    win32 :
    {
        // custom visual studio dir
        custom_vs_dir_path : "C:\\Program Files\\Microsoft Visual Studio",

        // source assets directory
        jcs_def : 
        {
            platforms : "win32"
        },

        // clean
        clean : {
            type: clean,
            directories : [
                "build/win32",
                "bin/win32",
            ]
        },

        // libs
        libs : {
            type : shell,
            explicit: true,
            commands : [
                "cd ..\\3rdparty && .\\build_libs.cmd -win32"
            ]
        },  

        // generate - use premake
        generate : {
            args : [
                "%{vs_version}",   // To genenrate vs sln, the first param must is "vs_version"
                "--sln_name=${sln_name}",
                "--env_dir=../",
                "--work_dir=${assets_dir}",
                "--project_dir=${project_dir}",
                "--renderer=vulkan",
                "--platform_dir=win32",
                "--sdk_version=%{windows_sdk_version}",
                "--header_tools_dir=${header_tools_dir}",
            ]
        },

        // copy
        copy : {
            type : copy,
            explicit: true,
            files : [
                ["${assets_dir}/${assets_export_dir}", "bin/${platforms}/${assets_export_dir}"],
            ]
        },

        // build
        build : {
            type : build,
            explicit: true,
            buildtool: "msbuild",
            files : [
                "build/${platforms}/${sln_name}.sln"
            ]       
        },

        // dll
        dlls : {
            type : copy,
            files : [
                ["../3rdparty/dxcompiler/bin/x64", "bin/${platforms}"],
            ]
        },

        // launch
        launch : {
            type : shell,
            explicit: true,
            commands : [
                 "bin\\${platforms}"
            ],
            // copy
            copy : {
                files : [
                    ["${assets_dir}/${assets_export_dir}", "bin/${platforms}/${assets_export_dir}"],
                ]
            },
        }
    }
}